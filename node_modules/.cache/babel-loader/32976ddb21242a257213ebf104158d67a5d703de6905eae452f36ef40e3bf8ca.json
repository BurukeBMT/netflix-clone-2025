{"ast":null,"code":"var _jsxFileName = \"/home/buruk-bmt/Desktop/netflix-clone-2025/src/components/Row/SingleRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./singlerow.css\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleRow = ({\n  title,\n  fetchUrl,\n  isLargeRow\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const base_url = \"https://image.tmdb.org/t/p/original\";\n  useEffect(() => {\n    (async () => {\n      try {\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    })();\n  }, [fetchUrl]);\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)).then(url => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search);\n        console.log(urlParams);\n        console.log(urlParams.get(\"v\"));\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_posters\",\n        children: movies === null || movies === void 0 ? void 0 : movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => handleClick(movie),\n          src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: movie.name,\n          className: `row__poster ${isLargeRow && \"row__posterLarge\"}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"40px\"\n        },\n        children: trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: trailerUrl,\n          opts: opts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleRow, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n_c = SingleRow;\nexport default SingleRow;\nvar _c;\n$RefreshReg$(_c, \"SingleRow\");","map":{"version":3,"names":["React","useEffect","useState","axios","movieTrailer","YouTube","jsxDEV","_jsxDEV","SingleRow","title","fetchUrl","isLargeRow","_s","movies","setMovies","trailerUrl","setTrailerUrl","base_url","request","get","data","results","error","console","log","handleClick","movie","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","opts","height","width","playerVars","autoplay","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","poster_path","backdrop_path","alt","style","padding","videoId","_c","$RefreshReg$"],"sources":["/home/buruk-bmt/Desktop/netflix-clone-2025/src/components/Row/SingleRow.jsx"],"sourcesContent":[" import React, { useEffect, useState } from 'react';\r\nimport \"./singlerow.css\"\r\nimport axios from \"../../utils/axios\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport YouTube from \"react-youtube\";\r\nconst SingleRow = ({ title, fetchUrl, isLargeRow }) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    const base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                \r\n                const request = await axios.get(fetchUrl);\r\n                \r\n                setMovies(request.data.results);\r\n            } catch (error) {\r\n                console.log(\"error\", error);\r\n            }\r\n        })();\r\n    }, [fetchUrl]);\r\n\r\n   const handleClick = (movie) => {\r\n     if (trailerUrl) {\r\n       setTrailerUrl(\"\");\r\n     } else {\r\n       movieTrailer(movie?.title || movie?.name || movie?.original_name)\r\n         .then((url) => {\r\n           console.log(url);\r\n           const urlParams = new URLSearchParams(new URL(url).search);\r\n           console.log(urlParams);\r\n           console.log(urlParams.get(\"v\"));\r\n           setTrailerUrl(urlParams.get(\"v\"));\r\n         })\r\n         .catch((error) => console.log(error));\r\n             \r\n \r\n     }\r\n    \r\n   };\r\n\r\n   const opts = {\r\n     height: \"390\",\r\n     width: \"100%\",\r\n     playerVars: {\r\n       autoplay: 1,\r\n     },\r\n   };\r\n\r\n    \r\n \r\n\r\n  return (\r\n    <div>\r\n      \r\n      <div className=\"row\">\r\n        <h1>{title}</h1>\r\n        <div className=\"row_posters\">\r\n          {movies?.map((movie, index) => (\r\n            <img\r\n              onClick={() => handleClick(movie)}\r\n              key={index}\r\n              src={`${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div style={{ padding: \"40px\" }}>\r\n           {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleRow\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}